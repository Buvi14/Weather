{"version":3,"sources":["Context/Context.js","Showdata/Showdata.jsx","Showdata/Extendata.jsx","Charts/Sevendays.jsx","LandingPage/LandingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["weatherData","createContext","Showdata","data","useContext","className","name","src","weather","icon","alt","main","temp","temp_max","temp_min","Extendata","console","log","wind","speed","humidity","pressure","Date","sys","sunrise","toLocaleTimeString","sunset","Sevendays","style","display","maxWidth","maxHeight","justifyContent","alignItems","width","height","chartType","loader","options","title","chartArea","hAxis","minValue","vAxis","rootProps","LandingPage","App","useState","setdata","weekdata","setWeekdata","api_key","useEffect","axios","get","then","lat","coord","lon","catch","err","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4928242.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n// Creating the Context\r\n\r\nconst weatherData = createContext({});\r\n\r\nexport default weatherData;\r\n","import React, { useContext } from 'react';\r\nimport './Showdata.css'\r\nimport weatherData from '../Context/Context';\r\n\r\nexport default function Showdata() {\r\n    // Make the use of context\r\n    const { data } = useContext(weatherData);\r\n    return (\r\n        <div className='show-container'>\r\n            {data === \"\" ? '' : <> <div className=\"data-container\" data-aos=\"fade-up\">\r\n                <div className=\"city\">\r\n                    {data.name} <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt='icon' />\r\n                </div>\r\n                <div className=\"weather\">Weather <span>{data.weather[0].main}</span>\r\n                </div>\r\n                <div className=\"current-temp\">Temparature<span>{data.main.temp}&deg;C</span>\r\n                </div>\r\n                <div className=\"temp\">Maximum Temparature<span>{data.main.temp_max}&deg;C</span>\r\n                </div>\r\n                <div className=\"temp temp-min\">Minimum Temparature<span>{data.main.temp_min}&deg;C</span>\r\n                </div>\r\n            </div>\r\n\r\n            </>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport weatherData from '../Context/Context';\r\nimport './Extendata.css'\r\n\r\nexport default function Extendata() {\r\n    const { data } = useContext(weatherData);\r\n    console.log(data)\r\n    return (\r\n        <div>\r\n            {data ? <div className=\"extend-data\" data-aos=\"fade-up\">\r\n                <div className=\"wind-speed\">Wind Speed: <span>{data.wind.speed}</span></div>\r\n                <div className=\"humidity\">Humidity: <span>{data.main.humidity}</span></div>\r\n                <div className=\"pressure\">Pressure: <span>{data.main.pressure}</span></div>\r\n                <div className=\"sun-rise\">Sun Rise: <span>{new Date(data.sys.sunrise).toLocaleTimeString()}</span></div>\r\n                <div className=\"sun-set\">Sun Set: <span>{new Date(data.sys.sunset).toLocaleTimeString()}</span></div>\r\n            </div> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Chart from \"react-google-charts\";\r\n\r\nexport default function Sevendays() {\r\n    return (\r\n        <div style={{ display: 'flex', maxWidth: '100%', maxHeight: '100vh', justifyContent: 'center', alignItems: 'center' }} >{\r\n            <Chart\r\n                width=\"70vw\"\r\n                height=\"50vh\"\r\n                chartType=\"ColumnChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Days', 'Min-Temp', 'Max-Temp'],\r\n                    ['Sat', 23.8, 25.17],\r\n                    ['sun', 18.91, 25.23],\r\n                    ['Mon', 19.28, 24.99],\r\n                    ['Tues', 19.4, 25.26],\r\n                    ['Wed', 19.66, 25.34],\r\n                    ['Thurs', 19.27, 25.03],\r\n                    ['Fri', 19.26, 26.47],\r\n                ]}\r\n                options={{\r\n                    title: 'Minimum and Max-temparature for a week',\r\n                    chartArea: { width: '50%' },\r\n                    hAxis: {\r\n                        title: 'Days',\r\n                        minValue: 0,\r\n                    },\r\n                    vAxis: {\r\n                        title: 'Temparature',\r\n                    },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n\r\n            />\r\n        }</div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './LandingPage.css'\r\nimport Showdata from '../Showdata/Showdata';\r\nimport Extendata from '../Showdata/Extendata';\r\nimport Sevendays from '../Charts/Sevendays';\r\n\r\nexport default function LandingPage() {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Showdata />\r\n            <Extendata />\r\n            <Sevendays />\r\n        </>\r\n    )\r\n}","import LandingPage from \"./LandingPage/LandingPage\";\nimport weatherData from \"./Context/Context\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  // State to store the data\n  const [data, setdata] = useState(\"\");\n  const [weekdata, setWeekdata] = useState([]);\n  const api_key = \"31c6c3d7d0816a49083eeaced76118fa\";\n  const city = \"bangalore\";\n  // make the api call\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${api_key}`\n      )\n      .then((data) => {\n        let lat = data.data.coord.lat;\n        let lon = data.data.coord.lon;\n        setdata(data.data);\n        axios\n          .get(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${api_key}`\n          )\n          .then((data) => {\n            setWeekdata(data.data);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    // Store in context\n    <weatherData.Provider value={{ data, weekdata }}>\n      <LandingPage />\n    </weatherData.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}